# Directory path on Luke's machine
setwd("~/Documents")
NewportDir = '../data/Newport_SSINP/'
WestcliffEelgrassDir = 'Westcliff/Eelgrass/'
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
# Get a list of gape (and temperature) filenames by looking for filenames that end
# in GAPE.csv
Gapefilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*GAPE.csv")
NewportDir = '.../data/Newport_SSINP/'
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
NewportDir = '/data/Newport_SSINP/'
WestcliffEelgrassDir = 'Westcliff/Eelgrass/'
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
NewportDir = '../data/Newport_SSINP/'
# Directory path on Luke's machine
setwd("../data/Newport_SSINP/")
# Directory path on Luke's machine
setwd(".../data/Newport_SSINP/")
NewportDir = '~/data/Newport_SSINP/'
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
NewportDir = '../data/Newport_SSINP/'
WestcliffEelgrassDir = '../Westcliff/Eelgrass/'
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
WestcliffEelgrassDir = '../Westcliff/Eelgrass'
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
NewportDir = '../data/Newport_SSINP'
WestcliffEelgrassDir = '../Westcliff/Eelgrass'
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
NewportDir = '../data/Newport_SSINP'
WestcliffEelgrassDir = '/Westcliff/Eelgrass'
```{r, echo=FALSE}
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
NewportDir = '../data/Newport_SSINP/'
WestcliffEelgrassDir = 'Westcliff/Eelgrass'
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(:"../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30"), full.names=TRUE, pattern= "*IR.csv")
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0("../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30"), full.names=TRUE, pattern= "*IR.csv")
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste("../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30"), full.names=TRUE, pattern= "*IR.csv")
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path=("../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30"), full.names=TRUE, pattern= "*IR.csv")
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir("../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30"), full.names=TRUE, pattern= "*IR.csv")
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(("../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30"), full.names=TRUE, pattern= "*IR.csv")
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = ("../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30"), full.names=TRUE, pattern= "*IR.csv")
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = "../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30", full.names=TRUE, pattern= "*IR.csv")
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = ("../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30", full.names=TRUE, pattern= "*IR.csv")
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = (("../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30"), full.names=TRUE, pattern= "*IR.csv")
IRfilenames = dir(path=past0("../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30"), full.names=TRUE, pattern= "*IR.csv")
IRfilenames = dir(path=paste0("../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30"), full.names=TRUE, pattern= "*IR.csv")
IRfilenames=dir('../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
IRfilenames=dir('../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv"))
IRfilenames=dir('../data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30', full.names=TRUE, pattern= "*IR.csv")
#Lauren's attempt
setwd("~/Documents/data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30")
# Directory path on Luke's machine
setwd("~/Documents")
#Lauren's attempt
path=("~/Documents/data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30")
#Lauren's attempt
path_test=("~/Documents/data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30")
IRfilenames = dir(path_test, full.names=TRUE, pattern= "*IR.csv")
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
IRfilenames_test = dir(path_test, full.names=TRUE, pattern= "*IR.csv")
WestcliffEelgrassDir = 'Westcliff/Eelgrass/'
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
WestcliffEelgrassDir = 'Westcliff/Eelgrass/'
NewportDir = '/data/Newport_SSINP/'
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
# Directory path on Luke's machine
NewportDir = '../data/Newport_SSINP/'
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
#Lauren's attempt
path_test=("~/Documents/Oyster/data/Newport_SSINP/Westcliff/Eelgrass/SN107_2022-07-13_2022-07-30")
# Directory path on Luke's machine
setwd("~/Documents/Oyster/Rcode")
NewportDir = '../data/Newport_SSINP/'
# Get a list of the IR heart sensor files by looking for filenames that end in IR.csv
IRfilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*IR.csv")
# Get a list of gape (and temperature) filenames by looking for filenames that end
# in GAPE.csv
Gapefilenames = dir(path = paste0(NewportDir, WestcliffEelgrassDir, 'SN107_2022-07-13_2022-07-30'), full.names=TRUE, pattern= "*GAPE.csv")
ConcatGapeFiles <- function(filenames, myTimeZone = 'UTC',verbose=TRUE){
if(verbose){
pb = txtProgressBar(min=0,max = length(filenames), style = 3)
}
# Open the raw data files and concatenate them.
for (f in 1:length(filenames)){
if(verbose) setTxtProgressBar(pb,f)
con = file(filenames[f])
line1 = scan(con, what='character', nlines = 1, sep = ',', quiet = TRUE)
line2 = scan(con, what = 'character', skip = 1, nlines = 1, sep = ',', quiet = TRUE)
close(con)
if (length(line2) > length(line1)){
# There is an extra column in the data section due to a trailing comma
# in the data rows
# so we need to handle the column names correctly on import
dattemp = read.csv(filenames[f], skip = 1, header = FALSE,
col.names = c(line1,'Extra'))
# Remove the extra column at the end
dattemp = dattemp[,-(ncol(dattemp))]
} else {
# number of headers is same as number of data columns, so just import
# as normal
dattemp = read.csv(filenames[f])
}
###########################
# Columns:
# POSIXt: elapsed seconds since 1970-01-01 00:00:00 (unix epoch) in whatever
#         timezone the sensor was set to during deployment. Presumably UTC
# DateTime: human-readable character date and time, in whatever timezone the
#         sensor was set to during deployment
# SN: serial number of the sensor
# Hall: raw Hall effect gape sensor reading
# TempC: temperature in Celsius from TMP107 sensor on the heart rate dongle
# Battery.V:  Supply battery voltage
#########################
# Convert the DateTime column to a POSIXct object.
dattemp$DateTime = as.POSIXct(dattemp$DateTime, tz=myTimeZone)
# Concatenate the data files.
if (f == 1){
dat = dattemp
} else if (f > 1){
dat = rbind(dat,dattemp)
}
}
if(verbose) close(pb)
# Reorder the concatenated data frame by the DateTime values in case the files
# were not fed in in chronological order
dat = dat[order(dat$DateTime),]
}
# Use the concatenate function defined above to put together all of the
# gape files stored in Gapefilenames
SN107_gape = ConcatGapeFiles(Gapefilenames, myTimeZone = 'UTC', verbose = TRUE)
# Plot the timeseries of gape values
plot(SN107_gape$DateTime, SN107_gape$Hall, type = 'l')
View(SN107_gape)
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DATE >= as.Date('2022-07-15') & DATE <= as.Date('2022-07-20'))
library(tidy)
library(tidyr)
library(tidyverse)
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DATE >= as.Date('2022-07-15') & DATE <= as.Date('2022-07-20'))
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.Date('2022-07-15') & DateTime<= as.Date('2022-07-20'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape$Hall, type = 'l')
View(SN107_gape_fieldonly)
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.Date('2022-07-15') & DateTime<= as.Date('2022-07-21'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.Date('2022-07-15') & DateTime<= as.Date('2022-07-20'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.Date('2022-07-15') & DateTime<= as.Date('2022-07-21'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.Date('2022-07-15') & DateTime<= as.Date('2022-07-21 01:00:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
View(SN107_gape_fieldonly)
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.Date('2022-07-15') & DateTime<= as.Date('2022-07-21 05:00:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
View(SN107_gape_fieldonly)
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.Date('2022-07-15') & DateTime<= as.Date('2022-07-20 05:00:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.Date('2022-07-21 05:00:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.Date('2022-07-20 23:50:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.Date('2022-07-20 23:50:00', tz="UTC"))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.Date('2022-07-21 23:50:00', tz="UTC"))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-2 23:50:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 23:50:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 23:50:00'))
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-21 23:50:00'))
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 07:10:00') & DateTime<= as.POSIXct('2022-07-21 23:50:00'))
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-21 23:50:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 23:50:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 20:50:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 10:50:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 05:50:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-19 20:50:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-19 23:50:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-19 24:50:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-19 24:50:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 00:00:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 10:00:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 02:00:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 01:00:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 07:42:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-19 07:42:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-19 07:43:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 07:43:00'))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 07:43:00'), tz="UTC")
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 07:43:00'), tz=="UTC")
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 07:43:00',tz="UTC"))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 00:00:00') & DateTime<= as.POSIXct('2022-07-20 07:42:00',tz="UTC"))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 13:00:00') & DateTime<= as.POSIXct('2022-07-20 07:42:00',tz="UTC"))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
#subset only time in field before death
SN107_gape_fieldonly <- SN107_gape %>%
filter(DateTime >= as.POSIXct('2022-07-15 13:00:00',tz="UTC") & DateTime<= as.POSIXct('2022-07-20 07:42:00',tz="UTC"))
plot(SN107_gape_fieldonly$DateTime, SN107_gape_fieldonly$Hall, type = 'l')
options(replace.assign = TRUE, width = 60)
knitr::opts_chunk$set(tidy = FALSE)
knitr::opts_chunk$set(fig.path = 'figs/', cache.path = 'cache/',
fig.width = 5, fig.height = 5, dpi = 600,
cache = TRUE, par = TRUE)
evalAll = FALSE # Set true to run all the chunks, even the long ones
# Setting this true will re-generate all of the concatenated files from the
# raw data files and re-run the gape sensor calibration and percentage
# conversion steps, then save new concatenated csv files.
library(signal)
install.packages("signal")
install.packages("pracma")
install.packages("pracma")
install.packages("signal")
install.packages("signal")
library(tidyverse)
library(scales)
library(readr)
library(dplyr)
library(Tides)
library(janitor)
library(zoo)
